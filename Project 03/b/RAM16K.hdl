// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // This is different than the previous RAM units
    // 4K is 1/4 16K, so instead of 8Way Mux/DMux -> 4Way
    DMux4Way(in=load, sel=address[0..1], a=dMuxA, b=dMuxB, c=dMuxC, d=dMuxD);

    //Replace registers from RAM512 chip with RAM4K
    RAM4K(in=in, load=dMuxA, address=address[2..13], out=ram4KAOut);
    RAM4K(in=in, load=dMuxB, address=address[2..13], out=ram4KBOut);
    RAM4K(in=in, load=dMuxC, address=address[2..13], out=ram4KCOut);
    RAM4K(in=in, load=dMuxD, address=address[2..13], out=ram4KDOut);

    // Mux4Way16 wires it all back with out
    Mux4Way16(a=ram4KAOut, b=ram4KBOut, c=ram4KCOut, d=ram4KDOut, sel=address[0..1], out=out);
}